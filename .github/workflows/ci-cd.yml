name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        description: 'Source Repository Branch Name Deployment'
        required: true
        default: 'main'
      ENVIRONMENT:
        description: "AWS Environment"
        required: true
        default: "dev"
        type: choice
        options:
            - develoment
            - sit
            - uat
            - Prod

# Limit concurrent jobs to avoid terraform lock issues
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # we cannot cancel a running job as it causes a terraform lock issue
 
# Define the permissions for the workflow
permissions:
  id-token: write
  contents: read
  attestations: write
  pull-requests: write
  issues: write            

jobs:
  build-and-deploy:
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.BRANCH }}
        fetch-depth: 0

    - name: Log in to DockerHub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin
        echo "‚úÖ Successfully logged in to Docker Hub"
      env:
        DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_CLI_EXPERIMENTAL: enabled

    
    - name: Build Docker image
      run: docker build -t jaisankar07/simple-time-service ./app

    - name: Tag Docker image with version 2
      run: docker tag simple-time-service jaisankar07/simple-time-service:2  

    - name: Push Docker image
      run: |
        docker push jaisankar07/simple-time-service:2
        echo "üê≥ Successfully pushed Docker image to Docker Hub (v2 - UI changes)"

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2

    # - name: Terraform Init
    #   working-directory: ./terraform
    #   run: terraform init

    # - name: Terraform Apply
    #   working-directory: ./terraform
    #   run: terraform apply -auto-approve
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_DEFAULT_REGION: us-east-1